// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/repository/request_status.go
//
// Generated by this command:
//
//	mockgen -source=pkg/repository/request_status.go -destination=pkg/repository/mock_request_status_repository.go -package=repository
//
// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRequestStatusRepository is a mock of RequestStatusRepository interface.
type MockRequestStatusRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRequestStatusRepositoryMockRecorder
}

// MockRequestStatusRepositoryMockRecorder is the mock recorder for MockRequestStatusRepository.
type MockRequestStatusRepositoryMockRecorder struct {
	mock *MockRequestStatusRepository
}

// NewMockRequestStatusRepository creates a new mock instance.
func NewMockRequestStatusRepository(ctrl *gomock.Controller) *MockRequestStatusRepository {
	mock := &MockRequestStatusRepository{ctrl: ctrl}
	mock.recorder = &MockRequestStatusRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestStatusRepository) EXPECT() *MockRequestStatusRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockRequestStatusRepository) Create(requestStatus *RequestStatus) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", requestStatus)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockRequestStatusRepositoryMockRecorder) Create(requestStatus any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockRequestStatusRepository)(nil).Create), requestStatus)
}

// GetByID mocks base method.
func (m *MockRequestStatusRepository) GetByID(id string) (*RequestStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", id)
	ret0, _ := ret[0].(*RequestStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockRequestStatusRepositoryMockRecorder) GetByID(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockRequestStatusRepository)(nil).GetByID), id)
}
